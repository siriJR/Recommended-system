

-----------------------------------相关链接-----------------------------------
1.课程链接：https://time.geekbang.org/column/article/294382

2.课程所用的供本地联系调试的推荐系统：https://github.com/wzhe06/SparrowRecSys


-----------------------------------2020-12-10-----------------------------------

【1】特征工程
1.可以把特征分成：
   ①、用户行为数据
       显性反馈（比如评分）和隐性反馈（比如评论，因为是文字，不能直接知道用户的行为）
       
	   业务场景      显性反馈              隐性反馈  
	   电商          对商品的评分          点击、加购、购买等  
	   视频网站      评分、点赞            点击、播放、播放时长等  
       新闻网站	     赞、踩                点击、评论  
	   音乐          对歌曲、歌手等评分    点击、播放、收藏  
	   
	   在当前的推荐系统特征工程中，隐性反馈行为越来越重要，主要原因是显性反馈行为的收集难度过大，数据量小。
	   在深度学习模型对数据量的要求越来越大的背景下，仅用显性反馈的数据不足以支持推荐系统训练过程的最终收敛。
	   所以，能够反映用户行为特点的隐性反馈是目前特征挖掘的重点。

    
    ②、用户关系数据
	    如果说用户行为数据是人与物之间的“连接”日志，那么用户关系数据就是人与人之间连接的记录。用户关系数据也
		可以分为“显性”和“隐性”两种，或者称为“强关系”和“弱关系”。
	    强关系：用户与用户之间可以通过“关注”“好友关系”等连接建立。
	    弱关系：通过“互相点赞”“同处一个社区”，甚至同看一部电影建立。

        在推荐系统中，利用用户关系数据的方式也是多种多样的，比如可以将用户关系作为召回层的一种物品召回方式；
	    也可以通过用户关系建立关系图，使用 Graph Embedding 的方法生成用户和物品的 Embedding；还可以直接利用关系
	    数据，通过“好友”的特征为用户添加新的属性特征；甚至可以利用用户关系数据直接建立社会化推荐系统。
    
    ③、属性、标签数据
        可以是用户也可以是物品。
        主体       类别                            来源
        用户	   人口属性（年龄、职业等）        用户注册、第三方
		用户       用户兴趣标签                    用户选择
		物品       物品属性（电影年代、导演等）    后台录入、第三方
		物品       物品标签                        用户或者管理员添加
        
        以上这些数据，一般公司都有团队去维护，也有一些通过“添加收藏”等为收藏对象打上标签（比如大数据、风控等标签）。
        
        在推荐系统中使用属性、标签类数据，一般是通过 Multi-hot 编码的方式将其转换成特征向量，一些重要的属性标签类特
		征也可以先转换成 Embedding，比如业界最新的做法是将标签属性类数据与其描述主体一起构建成知识图谱（Knowledge Graph），
		在其上施以 Graph Embedding 或者 GNN（Graph Neural Network，图神经网络）生成各节点的 Embedding，再输入推荐模型。  		

    ④、内容类数据
	    内容类数据可以看作属性标签型特征的延伸，同样是描述物品或用户的数据，但相比标签类特征，内容类数据往往是大段的描述型
	    文字、图片，甚至视频。一般推荐系统无法直接使用，需要通过CV、NLP等技术去提取特征。
	    图片、视频：利用计算机视觉模型进行目标检测，抽取图片特征，再把这些特征（要素）转换成标签类数据供推荐系统使用。
	    文字：通过自然语言处理的方法提取关键词、主题、分类等信息，一旦这些特征被提取出来，就跟处理属性、标签类特征的方法一样，
	          通过 Multi-hot 编码，Embedding 等方式输入推荐系统进行训练。
		  
    ⑤、场景信息（上下文）
        它是描述推荐行为产生的场景的信息。最常用的上下文信息是“时间”和通过 GPS、IP 地址获得的“地点”信息。根据推荐场景的不同，
	    上下文信息的范围极广，除了我们上面提到的时间和地点，还包括“当前所处推荐页面”“季节”“月份”“是否节假日”“天气”“空气质量”
	    “社会大事件”等等。场景特征描述的是用户所处的客观的推荐环境，广义上来讲，任何影响用户决定的因素都可以当作是场景特征的
	    一部分。但在实际的推荐系统应用中，由于一些特殊场景特征的获取极其困难，我们更多还是利用时间、地点、推荐页面这些易获取
	    的场景特征。	
	

	
2.音乐类推荐该怎么构建特征工程

①、
选择音乐，哪些因素是我关注的？
我经常会听五类歌曲：
1.听网络流行歌曲（听大家听的）；
2.听一些我喜欢的风格的歌曲（励志类，空灵类，感伤类）；
3.听一些我喜欢的歌手唱的歌，比如汪峰等；
4.听我看过的电视剧，电影，动漫中的背景音乐；
5.听一些朋友推荐的歌曲；

如果我是音乐app特征提取工程师的话，我会提取哪些特征？
首先将特征分为文中提及的五类吧。

1.用户行为数据
用户在音乐app上的行为，包括浏览，收藏，评论，点击，播放，时长，次数等。
是否第一次播放、是否快进、是否点开评论区等

2.用户关系数据
通过某个歌单或者某一首歌下面的评论对应的用户，找出这个用户对应的一些行为。
或者通过ta关注的一些歌手、用户等找出二度关系。

3.属性，标签类数据
歌曲的发行时间、类别（摇滚、轻音乐等）、歌手、歌曲时长、歌曲所属的歌单对应的标签等。
用户的人口统计特征（年龄、职业、收入、是否结婚、是否有小孩、是否会员、注册时间、最近登录时间、最近付费时间等）。

4.内容类数据
歌曲下面的评论特征提取：心情、兴趣等
听歌的心情和歌曲的旋律是否能匹配得上（hard）。

5.场景信息（上下文信息）
点击这个歌曲的时间、用户登录时间、当前日期的时间特征（年月日、是否周末、是否节假日等）
这个歌曲是否流行（热搜、抖音神曲等）
这首歌的歌手是否热搜等。
当前所在地的天气（雪、晴、大雨等）


②、
我在选歌的时候，信息重要性从高到低依次是：
1.听歌的目的。比如是为了放松，冥想，学习还是运动。目的决定了歌曲是安静还是激昂，舒缓还是节奏感强烈。
2.歌曲或歌单是否受欢迎。定下基调后，我一般会选择收藏或播放量较多的歌曲。这样一般不容易采坑。
3.歌曲的旋律与当下状态的匹配度。当下的状态可能是心情，情绪或身体的疲劳程度，而旋律与状态的匹配也很重要。
如果我是一名音乐 APP 工程师，
1.用户听歌的目的很难准确预测，但是可以通过“隐性”数据去推测，比如搜索关键词等。
2.歌曲或歌单是否受欢迎，则可以通过歌曲或歌单的播放量、收藏量去建立特征，而具体到人和歌曲的关系时，还可以进一步具体到单曲循环的次数等来细化特定用户对特定歌曲的喜好程度。
3.当下的状态也很难显性的获得，则可以根据历史听歌记录去推测用户的生理节律，例如夜晚会愿意听舒缓的歌曲，运动会愿意听节奏感强烈的歌曲等等。


③、

音乐产品更加依赖场景性和心情，在工作、学习、跑步、睡眠、开车、高兴、优伤等等，希望听到的音乐是不同的。所以市面上的音乐目前主要以歌单的形式来推，可以更好的让用户快速找到符合自己当下场景的音乐，感觉更是个强搜索型的产品，音乐的推荐策略更像是一种补充。

针对我个人而言，听音乐时所处的场景或心情、喜欢的音乐类型、喜欢的音乐明星、音乐新热榜、收藏过的歌单
音乐所处的场景 | 用户位置POI数据、历史时段听音乐歌单 | POI数据与音乐匹配度
心情 | 可以通过近几次搜索数据对推荐做干预 | 搜索关键词语义分析
感兴趣的音乐 | 播放历史 | 音乐相似度（可以是音乐Tag、旋律，现在可以基于旋律做歌曲的归类）
喜欢的音乐明星 | 明星收藏、历史播放、点赞、购买等行为 |
音乐新热榜 | 新内容池、热度内容池 | 多样性探索、新鲜度、热度数据
收藏过的歌单 | 收藏数据 | 收藏相似度

----歌单和关键词搜索















